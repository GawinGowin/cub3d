name: run Norminette

on:
  pull_request:
    branches: [ "main", "13-cicdの作成" ]

jobs:
  run_norminette:
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.sha }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install norminette
        run: |
          python -m pip install --upgrade pip setuptools
          pip install norminette
      - name: List changed files
        run: |
          git diff --diff-filter=AM --name-only ${{ github.event.pull_request.base.sha }}.. -- '*.c' '*.h' > changed_files.txt
          cat changed_files.txt
      - name : Run norminette
        id: norm
        run: |
          if [ ! -s changed_files.txt ]; then
            echo "status=0" >> $GITHUB_OUTPUT
            echo > result.txt
          else
            norminette -d $(cat changed_files.txt) > result.txt || true
            echo "status=1" >> $GITHUB_OUTPUT
          fi

      - name : Generate comment with norminette result
        if: ${{ steps.norm.outputs.status != 0 }}
        run: |
          cat << EOF > norminette.md
          ### File changed
          $(cat changed_files.txt)
          
          <details><summary>Norminette Result</summary>
          <p>

          \`\`\`sh
          $(cat result.txt)
          \`\`\`

          </p>
          </details>
          EOF
      - name : Generate comment without norminette result
        if: ${{ steps.norm.outputs.status == 0 }}
        run: |
          cat << EOF > norminette.md
          *.c and *.h files are not changed
          EOF
      - name: Create PR comment
        run: |
          gh pr comment ${{ github.event.number }} --edit-last --body-file norminette.md \
          || gh pr comment ${{ github.event.number }} --body-file norminette.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
